<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:converters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:dock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:properties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="MetroColors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <converters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
    <converters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
    <converters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
    <converters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
    <converters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />

    <Style x:Key="AvalonDockTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="ToolTip" Value="{Binding ToolTip}" />
        <Setter Property="Padding" Value="3,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                            <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                            <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="True" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                            <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                            <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush8}" />
                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                            <Setter Property="Panel.ZIndex" Value="0" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource WhiteBrush}" />
                            <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnchorableTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,4" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="ToolTip" Value="{Binding ToolTip}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="0,0,2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="Bd"
                                Margin="{TemplateBinding Margin}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="False">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource GrayBrush8}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="True" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource GrayBrush8}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush10}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroToolButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                <Setter Property="Foreground" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroDocumentPaneControlStyle" TargetType="{x:Type controls:LayoutDocumentPaneControl}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="True"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2"
                                Background="Transparent" />
                        <Grid Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <controls:DocumentPaneTabPanel x:Name="HeaderPanel"
                                                           Grid.Row="0"
                                                           Grid.Column="0"
                                                           Margin="0,0,2,0"
                                                           IsItemsHost="True"
                                                           KeyboardNavigation.TabIndex="1" />
                            <controls:DropDownButton x:Name="MenuDropDownButton"
                                                     Grid.Column="1"
                                                     VerticalAlignment="Center"
                                                     Focusable="False"
                                                     Style="{StaticResource MetroToolButtonStyle}">
                                <controls:DropDownButton.DropDownContextMenu>
                                    <controls:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <controls:ContextMenuEx.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type controls:MenuItemEx}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="IconTemplate" Value="{Binding Root.Manager.IconContentTemplate}" />
                                                <Setter Property="IconTemplateSelector" Value="{Binding Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="Command" Value="{Binding ., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </controls:ContextMenuEx.ItemContainerStyle>
                                    </controls:ContextMenuEx>
                                </controls:DropDownButton.DropDownContextMenu>
                                <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinDocMenu.png" />
                            </controls:DropDownButton>
                        </Grid>
                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,2,0,0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="0"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="MenuDropDownButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Content">
                                <Setter.Value>
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinDocMenu_Black.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="MenuDropDownButton" Property="IsChecked" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Content">
                                <Setter.Value>
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinDocMenu_Black.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.SelectedContent.IsActive, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Model.SelectedContent.IsLastFocusedDocument, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.SelectedContent.IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Model.SelectedContent.IsLastFocusedDocument, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.SelectedContent.IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Model.SelectedContent.IsLastFocusedDocument, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Model.ChildrenCount, RelativeSource={RelativeSource Mode=Self}}" Value="0">
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource AvalonDockTabItemStyle}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroAnchorablePaneControlStyle" TargetType="{x:Type controls:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutAnchorablePaneControl}">
                    <Grid ClipToBounds="True"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2"
                                Background="Transparent" />
                        <Border x:Name="ContentPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <controls:AnchorablePaneTabPanel x:Name="HeaderPanel"
                                                         Grid.Row="1"
                                                         Panel.ZIndex="1"
                                                         IsItemsHost="True"
                                                         KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource AnchorableTabItemStyle}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:AnchorablePaneTitle">
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush6}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="col1"
                                                  Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <controls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                          DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter x:Name="Header"
                                                      Margin="2,0,0,0"
                                                      Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                      TextElement.Foreground="{TemplateBinding Foreground}" />
                                    <Rectangle x:Name="Pattern"
                                               Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                               Height="5"
                                               Margin="10,0,0,0"
                                               Fill="{DynamicResource DragUnselectedPattern}" />
                                </StackPanel>
                            </controls:DropDownControlArea>

                            <controls:DropDownButton x:Name="MenuDropDownButton"
                                                     Grid.Column="1"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                     DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Focusable="False"
                                                     Style="{StaticResource MetroToolButtonStyle}"
                                                     ToolTip="ウィンドウ位置">
                                <Image x:Name="PART_ImgMenuPin"
                                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu.png" />
                            </controls:DropDownButton>

                            <Button x:Name="PART_AutoHidePin"
                                    Grid.Column="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Focusable="False"
                                    Style="{StaticResource MetroButtonStyle}"
                                    ToolTip="自動的に隠す"
                                    Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Image x:Name="PART_ImgAutoHidePin"
                                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinAutoHide.png" />
                            </Button>
                            <Button x:Name="PART_HidePin"
                                    Grid.Column="3"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Focusable="False"
                                    Style="{StaticResource MetroButtonStyle}"
                                    ToolTip="非表示"
                                    Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Image x:Name="PART_ImgHidePin"
                                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose.png" />
                            </Button>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                            <Setter TargetName="Pattern" Property="Fill" Value="{DynamicResource DragSelectedPattern}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinAutoHide_Dark.png" />
                            <Setter TargetName="PART_ImgHidePin" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgMenuPin" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Dark.png" />
                        </DataTrigger>
                        <Trigger SourceName="MenuDropDownButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgMenuPin" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="MenuDropDownButton" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_ImgMenuPin" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_AutoHidePin" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinAutoHide_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_HidePin" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgHidePin" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MetroAnchorSideTemplate"
                     TargetType="{x:Type controls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding Children, RelativeSource={RelativeSource TemplatedParent}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel MinWidth="0"
                                MinHeight="0"
                                Orientation="{Binding Model.Side, RelativeSource={RelativeSource AncestorType={x:Type controls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="MetroAnchorGroupTemplate"
                     TargetType="{x:Type controls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding Children, RelativeSource={RelativeSource TemplatedParent}}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding Model.Parent.Side, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="MetroAnchorTemplate"
                     TargetType="{x:Type controls:LayoutAnchorControl}">
        <Border x:Name="Bd"
                Margin="0,0,7,0"
                Background="{DynamicResource WhiteBrush}"
                BorderThickness="0">
            <StackPanel Orientation="Vertical">
                <Rectangle x:Name="Top"
                           Width="Auto"
                           Height="5"
                           Margin="0,0,0,5"
                           Fill="{DynamicResource GrayBrush8}"
                           Visibility="Hidden" />
                <ContentPresenter x:Name="TheContent"
                                  Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                  ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                  TextElement.Foreground="{DynamicResource GrayBrush6}" />
                <Rectangle x:Name="Bottom"
                           Width="Auto"
                           Height="5"
                           Margin="0"
                           Fill="{DynamicResource GrayBrush7}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Side" Value="Right">
                <Setter TargetName="Bottom" Property="Visibility" Value="Hidden" />
                <Setter TargetName="Top" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Side" Value="Bottom">
                <Setter TargetName="Bottom" Property="Visibility" Value="Visible" />
                <Setter TargetName="Top" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="Side" Value="Top">
                <Setter TargetName="Bottom" Property="Visibility" Value="Visible" />
                <Setter TargetName="Top" Property="Visibility" Value="Hidden" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Selector.IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bottom" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                <Setter TargetName="Top" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                <Setter TargetName="TheContent" Property="TextElement.Foreground" Value="{DynamicResource AccentColorBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type controls:OverlayWindow}" TargetType="{x:Type controls:OverlayWindow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer"
                            Opacity="0.9">
                        <Path x:Name="PART_PreviewBox"
                              Fill="AliceBlue"
                              Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                              StrokeThickness="2" />
                        <Grid x:Name="PART_DockingManagerDropTargets">
                            <Image x:Name="PART_DockingManagerDropTargetLeft"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockAnchorableLeft.png"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetRight"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockAnchorableRight.png"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetBottom"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Bottom"
                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockAnchorableBottom.png"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetTop"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockAnchorableTop.png"
                                   Stretch="None" />
                        </Grid>
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <Grid Width="112"
                                  Height="112"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="3"
                                       Grid.ColumnSpan="3"
                                       Margin="0,0.5,0,-0.5"
                                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockPaneEmpty.png"
                                       Stretch="None" />
                                <Border Name="PART_AnchorablePaneDropTargetTop"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="0,3.5,0, 0">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="2">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Margin="0,-0.5,0,0">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="2">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="0,0.5,0,0">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentInside.png"
                                           Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneDropTargets">
                            <Grid Width="112"
                                  Height="112"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="3"
                                       Grid.ColumnSpan="3"
                                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockPaneEmpty.png"
                                       Stretch="None" />
                                <Border Name="PART_DocumentPaneDropTargetTop"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="2">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="2">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Margin="2">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="2">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto"
                                        Grid.Row="1"
                                        Grid.Column="1">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentInside.png"
                                           Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>

                        <Grid x:Name="PART_DocumentPaneFullDropTargets">
                            <Grid Width="184"
                                  Height="184"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="5"
                                       Grid.ColumnSpan="5"
                                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockPaneLargeEmpty.png"
                                       Stretch="None" />
                                <Border Name="PART_DocumentPaneFullDropTargetTop"
                                        Grid.Row="1"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetRight"
                                        Grid.Row="2"
                                        Grid.Column="3">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetBottom"
                                        Grid.Row="3"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetLeft"
                                        Grid.Row="2"
                                        Grid.Column="1">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetInto"
                                        Grid.Row="2"
                                        Grid.Column="2">
                                    <Image Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentInside.png"
                                           Stretch="None" />
                                </Border>

                                <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane"
                                        Grid.Row="0"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane"
                                        Grid.Row="2"
                                        Grid.Column="4">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane"
                                        Grid.Row="4"
                                        Grid.Column="2">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane"
                                        Grid.Row="2"
                                        Grid.Column="0">
                                    <Image Margin="2"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/DockDocumentAsAnchorableLeft.png"
                                           Stretch="None" />
                                </Border>

                            </Grid>
                        </Grid>

                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="MetroDocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="MetroAnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image x:Name="icon"
                   Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                   Stretch="Uniform" />
            <TextBlock x:Name="title"
                       Grid.Column="1"
                       Margin="4,0,0,0"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                <Setter TargetName="title" Property="Margin" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MetroDocumentTitleTemplate">
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="MetroAnchorableTitleTemplate">
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="MetroIconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
               Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="MetroAnchorableContextMenu">
        <MenuItem Command="{Binding FloatCommand}"
                  Header="フローティング (_F)" />
        <MenuItem Command="{Binding DockCommand}"
                  Header="ドッキング (_D)" />
        <MenuItem Command="{Binding DockAsDocumentCommand}"
                  Header="ドッキング (_D)" />
        <MenuItem Command="{Binding AutoHideCommand}"
                  Header="自動的に隠す (_A)" />
        <MenuItem Command="{Binding CloseCommand}"
                  Header="非表示 (_H)"
                  Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>

    <ContextMenu x:Key="MetroDocumentContextMenu">
        <MenuItem Command="{Binding CloseCommand}"
                  Header="閉じる (_C)"
                  Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding CloseAllButThisCommand}"
                  Header="このウィンドウ以外すべて閉じる (_A)" />
        <MenuItem Command="{Binding FloatCommand}"
                  Header="フローティング (_F)" />
        <MenuItem Command="{Binding DockAsDocumentCommand}"
                  Header="ドッキング (_D)" />
        <MenuItem Command="{Binding NewHorizontalTabGroupCommand}"
                  Header="水平タブ グループの新規作成 (_Z)"
                  Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Width="14"
                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/HTabGroup.png"
                       Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>

        <MenuItem Command="{Binding NewVerticalTabGroupCommand}"
                  Header="垂直タブ グループの新規作成 (_V)"
                  Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Image Width="14"
                       Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/VTabGroup.png"
                       Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="{Binding MoveToNextTabGroupCommand}"
                  Header="次のタブ グループへ移動 (_X)"
                  Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding MoveToPreviousTabGroupCommand}"
                  Header="前のタブ グループへ移動 (_R)"
                  Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>

    <Style x:Key="{x:Type dock:DockingManager}" TargetType="{x:Type dock:DockingManager}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource MetroDocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource MetroAnchorablePaneControlStyle}" />
        <Setter Property="AnchorSideTemplate" Value="{StaticResource MetroAnchorSideTemplate}" />
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource MetroAnchorGroupTemplate}" />
        <Setter Property="AnchorTemplate" Value="{StaticResource MetroAnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource MetroDocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource MetroAnchorableHeaderTemplate}" />
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource MetroDocumentTitleTemplate}" />
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource MetroAnchorableTitleTemplate}" />
        <Setter Property="AnchorableContextMenu" Value="{StaticResource MetroAnchorableContextMenu}" />
        <Setter Property="DocumentContextMenu" Value="{StaticResource MetroDocumentContextMenu}" />
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource MetroDocumentHeaderTemplate}" />
        <Setter Property="IconContentTemplate" Value="{StaticResource MetroIconContentTemplate}" />
        <Setter Property="GridSplitterWidth" Value="4" />
        <Setter Property="GridSplitterHeight" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dock:DockingManager}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="1"
                                              Content="{TemplateBinding LayoutRootPanel}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="2"
                                              Content="{TemplateBinding RightSidePanel}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="0"
                                              Content="{TemplateBinding LeftSidePanel}" />
                            <ContentPresenter Grid.Row="0"
                                              Grid.Column="1"
                                              Content="{TemplateBinding TopSidePanel}" />
                            <ContentPresenter Grid.Row="2"
                                              Grid.Column="1"
                                              Content="{TemplateBinding BottomSidePanel}" />
                            <ContentPresenter x:Name="PART_AutoHideArea"
                                              Grid.Row="1"
                                              Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Content="{TemplateBinding AutoHideWindow}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type controls:LayoutGridResizerControl}" TargetType="{x:Type controls:LayoutGridResizerControl}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutGridResizerControl}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:LayoutDocumentControl}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutDocumentControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                          ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:LayoutDocumentTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutDocumentTabItem}">
                    <controls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                                                  DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="0,2,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2"
                                        Background="Transparent" />
                                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}" />
                                <Button x:Name="DocumentCloseButton"
                                        Grid.Column="1"
                                        Margin="5,1,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource MetroButtonStyle}"
                                        ToolTip="閉じる"
                                        Visibility="Hidden">
                                    <Image x:Name="PART_ImgPinClose"
                                           Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose.png" />
                                </Button>
                            </Grid>
                        </Border>
                    </controls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLastFocusedDocument}" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Dark.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Dark.png" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding CanClose}" Value="False">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger SourceName="DocumentCloseButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Black.png" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:LayoutAnchorableTabItem}">
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush6}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutAnchorableTabItem}">
                    <controls:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
                                                  DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                                <controls:DropDownControlArea Grid.Column="0"
                                                              DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                              DropDownContextMenuDataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </controls:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </MultiTrigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:LayoutAnchorableControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutAnchorableControl}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header"
                                    Background="{DynamicResource MetroBaseGradient4}">
                                <controls:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ContentPresenter Grid.Row="1"
                                              Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                              FlowDirection="{TemplateBinding FlowDirection}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.IsFloating, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Model.Parent.IsDirectlyHostedInFloatingWindow, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type controls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type controls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="18"
                                    CornerRadius="3"
                                    GlassFrameThickness="0"
                                    ResizeBorderThickness="10"
                                    ShowSystemMenu="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        Background="{DynamicResource AccentColorBrush}"
                                        Padding="3,2,2,3"
                                        TextBlock.Foreground="{DynamicResource IdealForegroundColorBrush}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <ContentPresenter Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Rectangle x:Name="Pattern"
                                                       Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Height="5"
                                                       Margin="10,0,0,0"
                                                       Fill="{DynamicResource DragUnselectedPattern}" />
                                        </StackPanel>

                                        <controls:DropDownButton x:Name="ContextMenuDropdownButton"
                                                                 Grid.Column="1"
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 HorizontalContentAlignment="Center"
                                                                 VerticalContentAlignment="Center"
                                                                 DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 DropDownContextMenuDataContext="{Binding RootDocumentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 Focusable="False"
                                                                 Style="{StaticResource MetroToolButtonStyle}"
                                                                 ToolTip="ウィンドウ位置"
                                                                 shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinMenu"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Dark.png"
                                                   Stretch="None" />
                                        </controls:DropDownButton>

                                        <Button x:Name="PART_PinMaximize"
                                                Grid.Column="2"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource MetroButtonStyle}"
                                                ToolTip="最大化"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinMaximize"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMaximize_Dark.png" />
                                        </Button>

                                        <Button x:Name="PART_PinRestore"
                                                Grid.Column="2"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource MetroButtonStyle}"
                                                ToolTip="ピン ステータスを切り替える"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinRestore"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinRestore_Dark.png" />
                                        </Button>

                                        <Button x:Name="PART_PinClose"
                                                Grid.Column="3"
                                                Command="{Binding RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource MetroButtonStyle}"
                                                ToolTip="閉じる"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinClose"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Dark.png" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Row="1"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.RootDocument.IsActive, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Model.RootDocument.IsLastFocusedDocument, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource MetroBaseGradient6}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinRestore_Dark.png" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMaximize_Dark.png" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Dark.png" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.RootDocument.IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Model.RootDocument.IsLastFocusedDocument, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush4}" />
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource MetroBaseGradient5}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinRestore_Dark.png" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMaximize_Dark.png" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Dark.png" />
                        </MultiDataTrigger>
                        <Trigger SourceName="ContextMenuDropdownButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="ContextMenuDropdownButton" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinMaximize" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMaximize" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMaximize_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinRestore" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinRestore" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinClose" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Black.png" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type controls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type controls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="18"
                                    CornerRadius="7"
                                    GlassFrameThickness="0"
                                    ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource MetroBaseGradient4}"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="18" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        Padding="2,0,2,0"
                                        TextElement.Foreground="{DynamicResource IdealForegroundColorBrush}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Border Visibility="{Binding Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <controls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                          DropDownContextMenuDataContext="{Binding SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <StackPanel Orientation="Horizontal">
                                                    <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                                      ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                                      ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <Rectangle x:Name="Pattern"
                                                               Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                                               Height="5"
                                                               Margin="10,0,0,0"
                                                               Fill="{DynamicResource DragUnselectedPattern}" />
                                                </StackPanel>
                                            </controls:DropDownControlArea>
                                        </Border>

                                        <controls:DropDownButton x:Name="SinglePaneContextMenu"
                                                                 Grid.Column="1"
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 HorizontalContentAlignment="Center"
                                                                 VerticalContentAlignment="Center"
                                                                 DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 DropDownContextMenuDataContext="{Binding SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 Focusable="False"
                                                                 Style="{StaticResource MetroToolButtonStyle}"
                                                                 ToolTip="ウィンドウ位置"
                                                                 Visibility="{Binding Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                 shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinMenu"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu.png"
                                                   Stretch="None" />
                                        </controls:DropDownButton>

                                        <Button x:Name="PART_PinMaximize"
                                                Grid.Column="2"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                HorizontalContentAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource MetroButtonStyle}"
                                                ToolTip="最大化"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinMaximize"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMaximize.png" />
                                        </Button>

                                        <Button x:Name="PART_PinRestore"
                                                Grid.Column="2"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource MetroButtonStyle}"
                                                ToolTip="元に戻す"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinRestore"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinRestore.png" />
                                        </Button>

                                        <Button x:Name="PART_PinClose"
                                                Grid.Column="3"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource MetroButtonStyle}"
                                                ToolTip="非表示"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image x:Name="PART_ImgPinClose"
                                                   Width="13"
                                                   Source="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose.png" />
                                        </Button>
                                    </Grid>
                                </Border>

                                <ContentPresenter Grid.Row="1"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource WhiteBrush}" />
                            <Setter TargetName="Pattern" Property="Fill" Value="{DynamicResource DragSelectedPattern}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Dark.png" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinRestore_Dark.png" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMaximize_Dark.png" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Dark.png" />
                        </DataTrigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="SinglePaneContextMenu" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_ImgPinMenu" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMenu_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinMaximize" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinMaximize" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinMaximize_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinRestore" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinRestore" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinRestore_Black.png" />
                        </Trigger>
                        <Trigger SourceName="PART_PinClose" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ImgPinClose" Property="Source" Value="/McCommandStudio;component/Internals/AvalonDock/Themes/Images/PinClose_Black.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type controls:LayoutAutoHideWindowControl}" TargetType="{x:Type controls:LayoutAutoHideWindowControl}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
    </Style>

    <Style x:Key="MetroNavigatorWindowListBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusX="2"
                               RadiusY="2"
                               Stroke="#8E6EA6F5"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="MetroNavigatorWindowListBoxItemHoverFill"
                     Color="{DynamicResource WhiteColor}" />
    <SolidColorBrush x:Key="MetroNavigatorWindowListBoxItemSelectedFill"
                     Color="{DynamicResource AccentColor4}" />
    <SolidColorBrush x:Key="MetroNavigatorWindowListBoxItemSelectedInactiveFill"
                     Color="{DynamicResource WhiteColor}" />
    <SolidColorBrush x:Key="MetroNavigatorWindowListBoxItemSelectedHoverFill"
                     Color="{DynamicResource WhiteColor}" />

    <Style x:Key="MetroNavigatorWindowListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource MetroNavigatorWindowListBoxItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Border x:Name="InnerBorder"
                                BorderThickness="1"
                                CornerRadius="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="UpperHighlight"
                                           Fill="#75FFFFFF"
                                           Visibility="Collapsed" />
                                <ContentPresenter Grid.RowSpan="2"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MetroNavigatorWindowListBoxItemSelectedFill}" />
                            <Setter Property="BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource MetroNavigatorWindowListBoxItemSelectedFill}" />
                            <Setter Property="BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type controls:NavigatorWindow}" TargetType="{x:Type controls:NavigatorWindow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="16"
                                    CornerRadius="3,3,3,3"
                                    GlassFrameThickness="4"
                                    ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NavigatorWindow}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{DynamicResource WhiteBrush}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                BorderThickness="1"
                                CornerRadius="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="54" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                               Stretch="None"
                                               Visibility="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        <TextBlock Grid.Column="1"
                                                   Margin="4,0,0,0"
                                                   VerticalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Text="{Binding SelectedDocument.LayoutElement.Title}"
                                                   TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                    <TextBlock VerticalAlignment="Center"
                                               Text="{Binding SelectedDocument.LayoutElement.Description}"
                                               TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Border Grid.Row="1"
                                        MinHeight="200"
                                        Background="{DynamicResource MetroBaseGradient2}"
                                        BorderBrush="{DynamicResource AccentColorBrush4}"
                                        BorderThickness="0,1,0,0">
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Margin="0,3,0,4"
                                                       FontWeight="Bold"
                                                       Text="Active Tool Windows" />
                                            <ListBox Grid.Row="1"
                                                     MaxHeight="400"
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     ItemContainerStyle="{StaticResource MetroNavigatorWindowListBoxItemStyle}"
                                                     ItemsSource="{Binding Anchorables}"
                                                     SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                                                   Stretch="None" />
                                                            <TextBlock Grid.Column="1"
                                                                       Margin="4,0,0,0"
                                                                       Text="{Binding LayoutElement.Title}"
                                                                       TextTrimming="CharacterEllipsis" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Grid>
                                        <Grid Grid.Column="1"
                                              Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Margin="0,3,0,4"
                                                       FontWeight="Bold"
                                                       Text="Active Files" />
                                            <ListBox Grid.Row="1"
                                                     MaxHeight="400"
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     ItemContainerStyle="{StaticResource MetroNavigatorWindowListBoxItemStyle}"
                                                     ItemsSource="{Binding Documents}"
                                                     SelectedItem="{Binding SelectedDocument, Mode=TwoWay}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
                                                                   Stretch="None" />
                                                            <TextBlock Grid.Column="1"
                                                                       Margin="4,0,0,0"
                                                                       Text="{Binding LayoutElement.Title}"
                                                                       TextTrimming="CharacterEllipsis" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Grid>
                                </Border>

                                <Grid Grid.Row="2"
                                      Margin="5">
                                    <TextBlock VerticalAlignment="Center"
                                               Text="{Binding SelectedDocument.LayoutElement.ToolTip}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
